--- "app/models/mail_handler.rb"    2024-09-07 13:34:41.385845300 +0300
+++ "app/models/mail_handler.rb"    2024-09-08 13:55:33.183043400 +0300
@@ -59,6 +59,7 @@
     receive(*args)
   rescue => e
     Rails.logger.error "MailHandler: an unexpected error occurred when receiving email: #{e.message}"
+    Rails.logger.error e.backtrace.join("\n")
     return false
   end
 
@@ -147,6 +148,8 @@
 
   MESSAGE_ID_RE = %r{^<?redmine\.([a-z0-9_]+)\-(\d+)\.\d+(\.[a-f0-9]+)?@}
   ISSUE_REPLY_SUBJECT_RE = %r{\[(?:[^\]]*\s+)?#(\d+)\]}
+  # based on https://www.redmine.org/issues/38614
+  ISSUE_REPLY_SUBJECT_RE2 = %r{^(?:Re:\s*)+(.*)$}i
   MESSAGE_REPLY_SUBJECT_RE = %r{\[[^\]]*msg(\d+)\]}
 
   def dispatch
@@ -165,7 +168,19 @@
     elsif m = subject.match(MESSAGE_REPLY_SUBJECT_RE)
       receive_message_reply(m[1].to_i)
     else
-      dispatch_to_default
+      if issue = Issue.where(subject: subject).order(id: :desc).first
+        logger&.info("MailHandler: found issue #{issue.id} using the full subject")
+        receive_issue_reply(issue.id)
+      elsif m = subject.match(ISSUE_REPLY_SUBJECT_RE2)
+        if issue = Issue.where(subject: m[1]).order(id: :desc).first
+          logger&.info("MailHandler: found issue #{issue.id} using the subject regex")
+          receive_issue_reply(issue.id)
+        else
+          dispatch_to_default
+        end
+      else
+        dispatch_to_default
+      end
     end
   rescue ActiveRecord::RecordInvalid => e
     # TODO: send a email to the user
@@ -439,6 +454,26 @@
 
     local = Regexp.escape(local)
 
+    # Try "X-FOLDER" custom header (see patched imap.rb)
+    if folder = email.header["X-FOLDER"]
+      Rails.logger.info "Found X-FOLDER #{folder}"
+      if project = Project.find_by_identifier(folder.to_s)
+        Rails.logger.debug "Found project \"#{project.name}\" (#{project.identifier}) from X-FOLDER"
+        return project
+      end
+    end
+
+    # Try the Delivered-To header next
+    email.header["Delivered-To"].each do |addr|
+      next if addr.blank?
+      if addr.to_s =~ /\A#{local}\+([^+]+)@#{domain}\z/
+        if project = Project.find_by_identifier($1)
+          Rails.logger.debug "Found project \"#{project.name}\" (#{project.identifier}) from Delivered-To"
+          return project
+        end
+      end
+    end
+
     [:to, :cc, :bcc].each do |field|
       header = @email[field]
       next if header.blank? || header.field.blank? || !header.field.respond_to?(:addrs)
@@ -446,9 +481,15 @@
       header.field.addrs.each do |addr|
         if addr.domain.to_s.casecmp(domain)==0 && addr.local.to_s =~ /\A#{local}\+([^+]+)\z/
           if project = Project.find_by_identifier($1)
+            Rails.logger.debug "Found project \"#{project.name}\" (#{project.identifier}) from #{field}"
             return project
           end
         end
+        # Also try {local} as project identifier
+        if project = Project.find_by_identifier(addr.local.to_s)
+          Rails.logger.debug "Found project \"#{project.name}\" (#{project.identifier}) from subaddress"
+          return project
+        end
       end
     end
     nil
